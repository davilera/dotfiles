#!/usr/bin/env bash
# shellcheck disable=SC1111
# shellcheck disable=SC2001
# shellcheck disable=SC2181

function help {
  cat <<EOF
Usage: $(basename "$0") [OPTION]... [DIR TITLE].

This script accepts either:
  - No arguments: runs interactively.
  - Two arguments: Accepts a directory name (where WordPress will be installed) and a site title.

Examples:
  $(basename "$0")
  $(basename "$0") my-site "My Site"
EOF
}

while getopts "h" opt; do
  case $opt in
  h)
    help
    exit 0
    ;;
  *)
    help
    exit 1
    ;;
  esac
done

if [ "$#" -eq 2 ]; then
  DIR="$1"
  TITLE="$2"
  USER="admin"
  PASSWORD="password"
elif [ "$#" -ne 0 ]; then
  help
  exit 1
else
  while [ "$TITLE" == "" ]; do
    TITLE=$(gum input --prompt "🌍 Site title: ")
    [[ $? -ne 0 ]] && exit 1
    TITLE=$(echo "$TITLE" | sed -e "s/^\s*//" | sed -e "s/\s*$//")
  done

  DEFAULT_DIR=$(echo "$TITLE" | tr "[:upper:]" "[:lower:]" | sed -e "s/[^a-z0-9 ]//g" | sed -e "s/\s\+/-/g")
  DIR=$(gum input --prompt "📂 Install directory ($DEFAULT_DIR): ")
  [[ $? -ne 0 ]] && exit 1
  [[ "$DIR" == "" ]] && DIR="$DEFAULT_DIR"
  while [ -e "$DIR" ]; do
    DIR=$(gum input --prompt "📂 Install directory ($DEFAULT_DIR): ")
    [[ $? -ne 0 ]] && exit 1
    echo "Directory “$DIR” already exists. Please use a non-existing name."
  done

  USER=$(gum input --prompt "👤 Admin user (admin): ")
  [[ $? -ne 0 ]] && exit 1
  [[ "$USER" == "" ]] && USER="admin"

  PASSWORD="a"
  PASSWORD_CONFIRM="b"
  while [ "$PASSWORD" != "$PASSWORD_CONFIRM" ]; do
    PASSWORD=$(gum input --prompt "🔑 Password (password): " --password)
    [[ $? -ne 0 ]] && exit 1
    if [ "$PASSWORD" == "" ]; then
      PASSWORD="password"
      PASSWORD_CONFIRM="password"
    else
      PASSWORD_CONFIRM=$(gum input --prompt "🔑 Repeat password: " --password)
      [[ $? -ne 0 ]] && exit 1
    fi
  done
fi

exit 0

# Create the directory
# --------------------------------------------------

mkdir "$DIR"
cd "$DIR" || exit 2

# ========================================================
echo "Initializing Lando..."
# ========================================================

lando init \
  --recipe wordpress \
  --source remote \
  --remote-url https://wordpress.org/latest.tar.gz \
  --webroot . \
  --name "$NAME"

cat >.lando.yml <<EOF
name: $(basename "$DIR")
recipe: wordpress
config:
  webroot: .
services:
    phpmyadmin:
        type: phpmyadmin
EOF

mv wordpress/* .
rmdir wordpress

lando start

# ========================================================
echo "Setting up WordPress..."
# ========================================================

# -----------------------------------
echo "  - Creating “wp-config.php”..."
# -----------------------------------
DBNAME=$(lando info --service database --format json | jq -r ".[0].creds.database")
DBUSER=$(lando info --service database --format json | jq -r ".[0].creds.user")
DBPASS=$(lando info --service database --format json | jq -r ".[0].creds.password")
DBHOST=$(lando info --service database --format json | jq -r ".[0].hostnames[0]")
lando wp config create \
  --dbname="$DBNAME" \
  --dbuser="$DBUSER" \
  --dbpass="$DBPASS" \
  --dbhost="$DBHOST" \
  --path=. >/dev/null 2>&1

# -----------------------------------
echo "  - Installing WordPress..."
# -----------------------------------
URL=$(lando info --service appserver --format json | jq -r ".[0].urls" | grep -vw localhost | grep http: | cut -d'"' -f2)
DOMAIN=$(echo "$URL" | sed -e "s/^http:\/\///" | sed -e "s/\/.*$//")
lando wp core install \
  --url="$URL" \
  --title="$TITLE" \
  --admin_user="$USER" \
  --admin_password="$PASSWORD" \
  --admin_email="$USER@$DOMAIN" \
  --path=. >/dev/null 2>&1

# -----------------------------------
echo "  - Cleaning default plugins..."
# -----------------------------------
lando wp plugin delete \
  akismet hello \
  --path=. >/dev/null 2>&1

# -----------------------------------
echo "  - Fixing permalink structure..."
# -----------------------------------
cat <<EOF >wp-cli.yml
apache_modules:
  - mod_rewrite
EOF
lando wp rewrite structure "/%postname%/" --path=. >/dev/null 2>&1
lando wp rewrite flush --path=. --hard >/dev/null 2>&1
